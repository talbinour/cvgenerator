{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isran\\\\cvgenerator\\\\client\\\\src\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// Login.jsx\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Admin from './Admin'; // Import the Admin component\nimport User from './User'; // Import the User component\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [motPasse, setMotPasse] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // Check if the entered email and password match the admin credentials\n    if (email === 'admin@example.com' && motPasse === 'adminPassword') {\n      // Admin credentials are valid, redirect to the admin page\n      navigate('/admin');\n      return;\n    }\n    try {\n      // Send login data to the server\n      const response = await axios.post('http://localhost:8080/api/login', {\n        email,\n        motPasse\n      });\n\n      // Assuming the server responds with a user object including the role upon successful login\n      const user = response.data.user;\n\n      // Redirect the user based on their role\n      if (user.role === 'admin') {\n        navigate('/admin'); // Redirect to the admin page\n      } else if (user.role === 'user') {\n        navigate('/user'); // Redirect to the user page\n      } else {\n        console.error('Unknown role:', user.role);\n      }\n    } catch (error) {\n      // Handle login error\n      console.error('Login failed', error);\n    }\n  };\n  const loginwithgoogle = () => {\n    // Your implementation here, or leave it empty if not needed\n  };\n\n  // Admin and User components are imported but not used in this file.\n  // You can either remove the imports or add the following comments to ignore the warnings.\n  // eslint-disable-next-line no-unused-vars\n  const adminComponent = /*#__PURE__*/_jsxDEV(Admin, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 26\n  }, this);\n  // eslint-disable-next-line no-unused-vars\n  const userComponent = /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Mot de passe:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: motPasse,\n          onChange: e => setMotPasse(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleLogin,\n          children: \"Connexion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message\",\n          children: [\"Not Registered? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"./SignUp\",\n            children: \"Create an account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-with-google-btn\",\n        onClick: loginwithgoogle,\n        children: \"Sign In With Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"/n5WXFJsRQyRe2MCUxlnKkGA+L8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","axios","Admin","User","jsxDEV","_jsxDEV","Login","_s","navigate","email","setEmail","motPasse","setMotPasse","handleLogin","e","preventDefault","response","post","user","data","role","console","error","loginwithgoogle","adminComponent","fileName","_jsxFileName","lineNumber","columnNumber","userComponent","className","children","style","textAlign","type","value","onChange","target","onClick","href","_c","$RefreshReg$"],"sources":["C:/Users/isran/cvgenerator/client/src/Login.jsx"],"sourcesContent":["// Login.jsx\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Admin from './Admin'; // Import the Admin component\r\nimport User from './User'; // Import the User component\r\nimport \"./Login.css\"\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState('');\r\n  const [motPasse, setMotPasse] = useState('');\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    // Check if the entered email and password match the admin credentials\r\n    if (email === 'admin@example.com' && motPasse === 'adminPassword') {\r\n      // Admin credentials are valid, redirect to the admin page\r\n      navigate('/admin');\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      // Send login data to the server\r\n      const response = await axios.post('http://localhost:8080/api/login', { email, motPasse });\r\n  \r\n      // Assuming the server responds with a user object including the role upon successful login\r\n      const user = response.data.user;\r\n  \r\n      // Redirect the user based on their role\r\n      if (user.role === 'admin') {\r\n        navigate('/admin'); // Redirect to the admin page\r\n      } else if (user.role === 'user') {\r\n        navigate('/user'); // Redirect to the user page\r\n      } else {\r\n        console.error('Unknown role:', user.role);\r\n      }\r\n    } catch (error) {\r\n      // Handle login error\r\n      console.error('Login failed', error);\r\n    }\r\n  };\r\n  const loginwithgoogle = () => {\r\n    // Your implementation here, or leave it empty if not needed\r\n  };\r\n\r\n  \r\n\r\n  // Admin and User components are imported but not used in this file.\r\n  // You can either remove the imports or add the following comments to ignore the warnings.\r\n  // eslint-disable-next-line no-unused-vars\r\n  const adminComponent = <Admin />;\r\n  // eslint-disable-next-line no-unused-vars\r\n  const userComponent = <User />;\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <h2 style={{ textAlign: 'center' }}>Connexion</h2>\r\n      <div className=\"form\">\r\n        <form className=\"login-form\">\r\n          <label>Email:</label>\r\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n\r\n          <label>Mot de passe:</label>\r\n          <input type=\"password\" value={motPasse} onChange={(e) => setMotPasse(e.target.value)} />\r\n\r\n          <button  type=\"button\" onClick={handleLogin}>\r\n            Connexion\r\n          </button>\r\n          <p className=\"message\">\r\n            Not Registered? <a href=\"./SignUp\">Create an account</a>\r\n          </p>\r\n        </form>\r\n        <button className=\"login-with-google-btn\" onClick={loginwithgoogle}>\r\n          Sign In With Google\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}